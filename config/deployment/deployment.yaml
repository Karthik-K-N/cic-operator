apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: cic-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: vms.cloud.ibm.com
spec:
  group: cloud.ibm.com
  names:
    kind: VM
    listKind: VMList
    plural: vms
    singular: vm
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status of the VM
      jsonPath: .status.status
      name: Status
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: VM is the Schema for the vms API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VMSpec defines the desired state of VM
            properties:
              flavorID:
                description: FlavorID indicates the flavor ID
                type: string
              imageID:
                description: ImageID indicates the image ID
                type: string
              networkID:
                description: NetworkID indicates network ID
                type: string
            type: object
          status:
            description: VMStatus defines the observed state of VM
            properties:
              id:
                description: ID indicates the VM ID
                type: string
              status:
                description: Status indicates the current status of the VM
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cic-operator-controller-manager
  namespace: cic-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cic-operator-leader-election-role
  namespace: cic-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cic-operator-manager-role
rules:
- apiGroups:
  - cloud.ibm.com
  resources:
  - vms
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cloud.ibm.com
  resources:
  - vms/finalizers
  verbs:
  - update
- apiGroups:
  - cloud.ibm.com
  resources:
  - vms/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cic-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cic-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cic-operator-leader-election-rolebinding
  namespace: cic-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cic-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: cic-operator-controller-manager
  namespace: cic-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cic-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cic-operator-manager-role
subjects:
- kind: ServiceAccount
  name: cic-operator-controller-manager
  namespace: cic-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cic-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cic-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: cic-operator-controller-manager
  namespace: cic-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 3499b104.ibm.com
kind: ConfigMap
metadata:
  name: cic-operator-manager-config
  namespace: cic-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: cic-operator-controller-manager-metrics-service
  namespace: cic-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cacert-conf
  namespace: cic-operator-system
data:
  config: |
    FILL_IN
---
apiVersion: v1
kind: Secret
metadata:
  name: cic-credentials
  namespace: cic-operator-system
type: Opaque
stringData:
  username: "FILL_IN"
  password: "FILL_IN"
  identity_api_version: "3"
  auth_url: "FILL_IN"
  region_name: "RegionOne"
  project_domain_name: "Default"
  project_name: "ibm-default"
  tenant_name: "ibm-default"
  user_domain_name: "Default"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: cic-operator-controller-manager
  namespace: cic-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: quay.io/kabhat/cic-operator
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        env:
          - name: OS_USERNAME
            valueFrom:
              secretKeyRef:
                name: cic-credentials
                key: username
                optional: false
          - name: OS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cic-credentials
                key: password
                optional: false
          - name: OS_IDENTITY_API_VERSION
            valueFrom:
              secretKeyRef:
                name: cic-credentials
                key: identity_api_version
                optional: false
          - name: OS_AUTH_URL
            valueFrom:
              secretKeyRef:
                name: cic-credentials
                key: auth_url
                optional: false
          - name: OS_REGION_NAME
            valueFrom:
              secretKeyRef:
                name: cic-credentials
                key: region_name
                optional: false
          - name: OS_PROJECT_DOMAIN_NAME
            valueFrom:
              secretKeyRef:
                name: cic-credentials
                key: project_domain_name
                optional: false
          - name: OS_PROJECT_NAME
            valueFrom:
              secretKeyRef:
                name: cic-credentials
                key: project_name
                optional: false
          - name: OS_TENANT_NAME
            valueFrom:
              secretKeyRef:
                name: cic-credentials
                key: tenant_name
                optional: false
          - name: OS_USER_DOMAIN_NAME
            valueFrom:
              secretKeyRef:
                name: cic-credentials
                key: user_domain_name
                optional: false
          - name: OS_CACERT
            value: /etc/cic/config
        volumeMounts:
          - mountPath: /etc/cic
            name: cacert-conf
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cic-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - configMap:
            defaultMode: 420
            name: cacert-conf
          name: cacert-conf
